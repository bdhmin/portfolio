{"ast":null,"code":"import React from 'react';\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst defaultProps = {\n  breakpointCols: undefined,\n  // optional, number or object { default: number, [key: number]: number }\n  className: undefined,\n  // required, string\n  columnClassName: undefined,\n  // optional, string\n  // Any React children. Typically an array of JSX items\n  children: undefined,\n  // Custom attributes, however it is advised against\n  // using these to prevent unintended issues and future conflicts\n  // ...any other attribute, will be added to the container\n  columnAttrs: undefined,\n  // object, added to the columns\n  // Deprecated props\n  // The column property is deprecated.\n  // It is an alias of the `columnAttrs` property\n  column: undefined\n};\nconst DEFAULT_COLUMNS = 2;\n\nclass Masonry extends React.Component {\n  constructor(props) {\n    super(props); // Correct scope for when methods are accessed externally\n\n    this.reCalculateColumnCount = this.reCalculateColumnCount.bind(this);\n    this.reCalculateColumnCountDebounce = this.reCalculateColumnCountDebounce.bind(this); // default state\n\n    let columnCount;\n\n    if (this.props.breakpointCols && this.props.breakpointCols.default) {\n      columnCount = this.props.breakpointCols.default;\n    } else {\n      columnCount = parseInt(this.props.breakpointCols) || DEFAULT_COLUMNS;\n    }\n\n    this.state = {\n      columnCount\n    };\n  }\n\n  componentDidMount() {\n    this.reCalculateColumnCount(); // window may not be available in some environments\n\n    if (window) {\n      window.addEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  componentDidUpdate() {\n    this.reCalculateColumnCount();\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  reCalculateColumnCountDebounce() {\n    if (!window || !window.requestAnimationFrame) {\n      // IE10+\n      this.reCalculateColumnCount();\n      return;\n    }\n\n    if (window.cancelAnimationFrame) {\n      // IE10+\n      window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);\n    }\n\n    this._lastRecalculateAnimationFrame = window.requestAnimationFrame(() => {\n      this.reCalculateColumnCount();\n    });\n  }\n\n  reCalculateColumnCount() {\n    const windowWidth = window && window.innerWidth || Infinity;\n    let breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object\n\n    if (typeof breakpointColsObject !== 'object') {\n      breakpointColsObject = {\n        default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS\n      };\n    }\n\n    let matchedBreakpoint = Infinity;\n    let columns = breakpointColsObject.default || DEFAULT_COLUMNS;\n\n    for (let breakpoint in breakpointColsObject) {\n      const optBreakpoint = parseInt(breakpoint);\n      const isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;\n\n      if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {\n        matchedBreakpoint = optBreakpoint;\n        columns = breakpointColsObject[breakpoint];\n      }\n    }\n\n    columns = Math.max(1, parseInt(columns) || 1);\n\n    if (this.state.columnCount !== columns) {\n      this.setState({\n        columnCount: columns\n      });\n    }\n  }\n\n  itemsInColumns() {\n    const currentColumnCount = this.state.columnCount;\n    const itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array\n\n    const items = React.Children.toArray(this.props.children);\n\n    for (let i = 0; i < items.length; i++) {\n      const columnIndex = i % currentColumnCount;\n\n      if (!itemsInColumns[columnIndex]) {\n        itemsInColumns[columnIndex] = [];\n      }\n\n      itemsInColumns[columnIndex].push(items[i]);\n    }\n\n    return itemsInColumns;\n  }\n\n  renderColumns() {\n    const {\n      column,\n      columnAttrs = {},\n      columnClassName\n    } = this.props;\n    const childrenInColumns = this.itemsInColumns();\n    const columnWidth = `${100 / childrenInColumns.length}%`;\n    let className = columnClassName;\n\n    if (className && typeof className !== 'string') {\n      this.logDeprecated('The property \"columnClassName\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        className = 'my-masonry-grid_column';\n      }\n    }\n\n    const columnAttributes = _objectSpread(_objectSpread(_objectSpread({}, column), columnAttrs), {}, {\n      style: _objectSpread(_objectSpread({}, columnAttrs.style), {}, {\n        width: columnWidth\n      }),\n      className\n    });\n\n    return childrenInColumns.map((items, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, columnAttributes, {\n        key: i\n      }), items);\n    });\n  }\n\n  logDeprecated(message) {\n    console.error('[Masonry]', message);\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      // ignored\n      children,\n      breakpointCols,\n      columnClassName,\n      columnAttrs,\n      column,\n      // used\n      className\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"breakpointCols\", \"columnClassName\", \"columnAttrs\", \"column\", \"className\"]);\n\n    let classNameOutput = className;\n\n    if (typeof className !== 'string') {\n      this.logDeprecated('The property \"className\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        classNameOutput = 'my-masonry-grid';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: classNameOutput\n    }), this.renderColumns());\n  }\n\n}\n\nMasonry.defaultProps = defaultProps;\nexport default Masonry;","map":{"version":3,"sources":["/Users/bryanmin/Desktop/Website/portfolio/node_modules/react-masonry-css/dist/react-masonry-css.module.js"],"names":["React","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","_extends","assign","arguments","hasOwnProperty","apply","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","defaultProps","breakpointCols","undefined","className","columnClassName","children","columnAttrs","column","DEFAULT_COLUMNS","Masonry","Component","constructor","props","reCalculateColumnCount","bind","reCalculateColumnCountDebounce","columnCount","default","parseInt","state","componentDidMount","window","addEventListener","componentDidUpdate","componentWillUnmount","removeEventListener","requestAnimationFrame","cancelAnimationFrame","_lastRecalculateAnimationFrame","windowWidth","innerWidth","Infinity","breakpointColsObject","matchedBreakpoint","columns","breakpoint","optBreakpoint","isCurrentBreakpoint","Math","max","setState","itemsInColumns","currentColumnCount","Array","items","Children","toArray","columnIndex","renderColumns","childrenInColumns","columnWidth","logDeprecated","columnAttributes","style","width","map","createElement","message","console","error","render","_this$props","rest","classNameOutput"],"mappings":"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","sourcesContent":["import React from 'react';\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nconst defaultProps = {\n  breakpointCols: undefined,\n  // optional, number or object { default: number, [key: number]: number }\n  className: undefined,\n  // required, string\n  columnClassName: undefined,\n  // optional, string\n  // Any React children. Typically an array of JSX items\n  children: undefined,\n  // Custom attributes, however it is advised against\n  // using these to prevent unintended issues and future conflicts\n  // ...any other attribute, will be added to the container\n  columnAttrs: undefined,\n  // object, added to the columns\n  // Deprecated props\n  // The column property is deprecated.\n  // It is an alias of the `columnAttrs` property\n  column: undefined\n};\nconst DEFAULT_COLUMNS = 2;\n\nclass Masonry extends React.Component {\n  constructor(props) {\n    super(props); // Correct scope for when methods are accessed externally\n\n    this.reCalculateColumnCount = this.reCalculateColumnCount.bind(this);\n    this.reCalculateColumnCountDebounce = this.reCalculateColumnCountDebounce.bind(this); // default state\n\n    let columnCount;\n\n    if (this.props.breakpointCols && this.props.breakpointCols.default) {\n      columnCount = this.props.breakpointCols.default;\n    } else {\n      columnCount = parseInt(this.props.breakpointCols) || DEFAULT_COLUMNS;\n    }\n\n    this.state = {\n      columnCount\n    };\n  }\n\n  componentDidMount() {\n    this.reCalculateColumnCount(); // window may not be available in some environments\n\n    if (window) {\n      window.addEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  componentDidUpdate() {\n    this.reCalculateColumnCount();\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  reCalculateColumnCountDebounce() {\n    if (!window || !window.requestAnimationFrame) {\n      // IE10+\n      this.reCalculateColumnCount();\n      return;\n    }\n\n    if (window.cancelAnimationFrame) {\n      // IE10+\n      window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);\n    }\n\n    this._lastRecalculateAnimationFrame = window.requestAnimationFrame(() => {\n      this.reCalculateColumnCount();\n    });\n  }\n\n  reCalculateColumnCount() {\n    const windowWidth = window && window.innerWidth || Infinity;\n    let breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object\n\n    if (typeof breakpointColsObject !== 'object') {\n      breakpointColsObject = {\n        default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS\n      };\n    }\n\n    let matchedBreakpoint = Infinity;\n    let columns = breakpointColsObject.default || DEFAULT_COLUMNS;\n\n    for (let breakpoint in breakpointColsObject) {\n      const optBreakpoint = parseInt(breakpoint);\n      const isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;\n\n      if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {\n        matchedBreakpoint = optBreakpoint;\n        columns = breakpointColsObject[breakpoint];\n      }\n    }\n\n    columns = Math.max(1, parseInt(columns) || 1);\n\n    if (this.state.columnCount !== columns) {\n      this.setState({\n        columnCount: columns\n      });\n    }\n  }\n\n  itemsInColumns() {\n    const currentColumnCount = this.state.columnCount;\n    const itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array\n\n    const items = React.Children.toArray(this.props.children);\n\n    for (let i = 0; i < items.length; i++) {\n      const columnIndex = i % currentColumnCount;\n\n      if (!itemsInColumns[columnIndex]) {\n        itemsInColumns[columnIndex] = [];\n      }\n\n      itemsInColumns[columnIndex].push(items[i]);\n    }\n\n    return itemsInColumns;\n  }\n\n  renderColumns() {\n    const {\n      column,\n      columnAttrs = {},\n      columnClassName\n    } = this.props;\n    const childrenInColumns = this.itemsInColumns();\n    const columnWidth = `${100 / childrenInColumns.length}%`;\n    let className = columnClassName;\n\n    if (className && typeof className !== 'string') {\n      this.logDeprecated('The property \"columnClassName\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        className = 'my-masonry-grid_column';\n      }\n    }\n\n    const columnAttributes = _objectSpread(_objectSpread(_objectSpread({}, column), columnAttrs), {}, {\n      style: _objectSpread(_objectSpread({}, columnAttrs.style), {}, {\n        width: columnWidth\n      }),\n      className\n    });\n\n    return childrenInColumns.map((items, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, columnAttributes, {\n        key: i\n      }), items);\n    });\n  }\n\n  logDeprecated(message) {\n    console.error('[Masonry]', message);\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      // ignored\n      children,\n      breakpointCols,\n      columnClassName,\n      columnAttrs,\n      column,\n      // used\n      className\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"breakpointCols\", \"columnClassName\", \"columnAttrs\", \"column\", \"className\"]);\n\n    let classNameOutput = className;\n\n    if (typeof className !== 'string') {\n      this.logDeprecated('The property \"className\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        classNameOutput = 'my-masonry-grid';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: classNameOutput\n    }), this.renderColumns());\n  }\n\n}\n\nMasonry.defaultProps = defaultProps;\n\nexport default Masonry;\n"]},"metadata":{},"sourceType":"module"}